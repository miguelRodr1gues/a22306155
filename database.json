[{"model": "portfolio.disciplina", "pk": 1, "fields": {"nome": "Linguagens de Programação 2", "ano": 2, "semestre": 1, "docentes": "Pedro Alves", "link_moodle": "https://moodle.ensinolusofona.pt/course/view.php?id=30502", "link_ulusofona": "https://www.ulusofona.pt/lisboa/licenciaturas/videojogos/ULHT1075-898"}}, {"model": "portfolio.disciplina", "pk": 2, "fields": {"nome": "Desenvolvimento de Interfaces Web", "ano": 2, "semestre": 1, "docentes": "Lucio Studer, Duarte Neves", "link_moodle": "https://moodle.ensinolusofona.pt/course/view.php?id=28717", "link_ulusofona": "https://www.ulusofona.pt/lisboa/licenciaturas/engenharia-informatica/ULHT260-26141"}}, {"model": "portfolio.disciplina", "pk": 3, "fields": {"nome": "Fundamentos de Programação", "ano": 1, "semestre": 1, "docentes": "Pedro Alves", "link_moodle": "https://moodle.ensinolusofona.pt/course/view.php?id=23380", "link_ulusofona": "https://www.ulusofona.pt/lisboa/licenciaturas/ciencia-de-dados/ULHT6634-7337"}}, {"model": "portfolio.disciplina", "pk": 4, "fields": {"nome": "Programação Web", "ano": 2, "semestre": 2, "docentes": "Lucio Studer, Pedro Perdigão", "link_moodle": "https://moodle.ensinolusofona.pt/course/view.php?id=30559", "link_ulusofona": "https://www.ulusofona.pt/lisboa/licenciaturas/engenharia-informatica/ULHT260-11195"}}, {"model": "portfolio.disciplina", "pk": 5, "fields": {"nome": "Fundamentos de Física", "ano": 1, "semestre": 1, "docentes": "Cristiane Ferreira", "link_moodle": "https://moodle.ensinolusofona.pt/course/view.php?id=22641", "link_ulusofona": "https://www.ulusofona.pt/lisboa/licenciaturas/engenharia-informatica-redes-e-telecomunicacoes/ULHT2531-7336"}}, {"model": "portfolio.tecnologia", "pk": 1, "fields": {"nome": "Java", "logotipo": "logos_tecnologias/transferir.png", "link": "https://pt.wikipedia.org/wiki/Java_(linguagem_de_programa%C3%A7%C3%A3o)", "descricao": "Orientação a Objetos: Java segue o paradigma de orientação a objetos, facilitando a organização e reutilização de código através de classes e objetos.\r\n\r\nPortabilidade: Com a frase \"Write Once, Run Anywhere\", Java permite que programas sejam executados em qualquer plataforma que tenha a JVM (Java Virtual Machine), tornando-o independente de sistemas operacionais.\r\n\r\nSegurança: Java foi projetado com mecanismos de segurança robustos, como a execução dentro da JVM, que impede o acesso direto aos recursos do sistema operacional.\r\n\r\nMultithreading: Suporte nativo para multithreading, permitindo que várias tarefas sejam executadas simultaneamente, o que é essencial para aplicativos de alto desempenho.\r\n\r\nGarbage Collection: O gerenciamento automático de memória, que elimina objetos não utilizados, reduz o risco de erros e melhora a eficiência.\r\n\r\nBiblioteca Padrão Ampla: Java oferece uma extensa biblioteca de APIs para tarefas como manipulação de arquivos, redes, interfaces gráficas e muito mais.\r\n\r\nDesempenho: Embora não tão rápido quanto linguagens como C, Java oferece boa performance através da otimização da JVM e do JIT Compiler (compilação Just-In-Time).\r\n\r\nVersatilidade: Java é usado em diversas áreas, como desenvolvimento móvel (Android), aplicações empresariais, sistemas embarcados e aplicativos em nuvem."}}, {"model": "portfolio.tecnologia", "pk": 2, "fields": {"nome": "Next.js", "logotipo": "logos_tecnologias/transferir_fAnFKdO.png", "link": "https://nextjs.org/", "descricao": "Next.js é um framework de React que facilita a criação de aplicações web modernas, oferecendo recursos como:\r\n\r\nRenderização híbrida (estática e no servidor)\r\n\r\nRoteamento automático baseado em arquivos\r\n\r\nOtimização de performance\r\n\r\nAPI Routes (backend junto com frontend)\r\n\r\nSuporte a TypeScript, CSS Modules, e muito mais\r\n\r\nIdeal para construir websites rápidos, escaláveis e com boa experiência de SEO"}}, {"model": "portfolio.tecnologia", "pk": 3, "fields": {"nome": "React", "logotipo": "logos_tecnologias/68747470733a2f2f63646e2e61757468302e636f6d2f626c6f672f72656163742d6a73_Yry3HCp.png", "link": "https://react.dev/", "descricao": "React é uma biblioteca JavaScript criada pelo Facebook para construir interfaces de utilizador (UIs) de forma eficiente, especialmente em aplicações web com muitos elementos dinâmicos.\r\n\r\nCaracterísticas principais do React:\r\nComponentes: A UI é dividida em componentes reutilizáveis, cada um responsável por uma parte da interface.\r\n\r\nJSX: Usa uma sintaxe chamada JSX, que mistura HTML com JavaScript, facilitando a escrita dos componentes.\r\n\r\nVirtual DOM: Em vez de atualizar a página inteira, React usa um DOM virtual para aplicar apenas as mudanças necessárias, tornando as atualizações mais rápidas.\r\n\r\nUnidirectional Data Flow: Os dados fluem numa única direção (de cima para baixo), o que facilita o rastreamento e o controlo do estado da aplicação.\r\n\r\nReact Hooks: Permitem usar estado e outras funcionalidades do React em componentes funcionais."}}, {"model": "portfolio.tecnologia", "pk": 4, "fields": {"nome": "JavaScript", "logotipo": "logos_tecnologias/Unofficial_JavaScript_logo_2.svg.png", "link": "https://developer.mozilla.org/pt-BR/docs/Web/JavaScript", "descricao": "JavaScript é uma linguagem de programação amplamente usada para tornar páginas web interativas e dinâmicas. Funciona no navegador (front-end), mas também pode ser usada no servidor com tecnologias como Node.js.\r\nÉ interpretada e orientada a eventos.\r\nPermite manipular o HTML e CSS de forma dinâmica.\r\nUsada para validar formulários, criar animações, carregar dados com AJAX, entre outros."}}, {"model": "portfolio.tecnologia", "pk": 5, "fields": {"nome": "Tailwind", "logotipo": "logos_tecnologias/images.png", "link": "https://tailwindcss.com/", "descricao": "Tailwind CSS é um framework CSS utilitário que permite criar designs diretamente no HTML usando classes pré-definidas.\r\nÉ mobile-first e customizável.\r\nFoca em velocidade de desenvolvimento e consistência visual"}}, {"model": "portfolio.tecnologia", "pk": 6, "fields": {"nome": "TypeScript", "logotipo": "logos_tecnologias/Typescript.svg.png", "link": "https://www.typescriptlang.org/", "descricao": "TypeScript é uma linguagem de programação baseada em JavaScript, desenvolvida pela Microsoft, que adiciona tipagem estática e recursos avançados ao JavaScript.\r\n\r\nEm resumo:\r\nÉ um superset de JavaScript – todo código JS válido é também válido em TypeScript.\r\n\r\nPermite definir tipos para variáveis, funções, objetos, etc., ajudando a evitar erros comuns em tempo de desenvolvimento.\r\n\r\nMelhora a legibilidade e manutenção do código, especialmente em projetos grandes.\r\n\r\nCompila para JavaScript puro, funcionando em qualquer ambiente onde JavaScript roda."}}, {"model": "portfolio.tecnologia", "pk": 7, "fields": {"nome": "Kotlin", "logotipo": "logos_tecnologias/transferir.jfif", "link": "https://kotlinlang.org/", "descricao": "Kotlin é moderna, concisa, segura, interoperável, multiplataforma, clara, produtiva, funcional, estática, poderosa"}}, {"model": "portfolio.tecnologia", "pk": 8, "fields": {"nome": "Intellij", "logotipo": "logos_tecnologias/1200px-IntelliJ_IDEA_Logo.png", "link": "https://www.googleadservices.com/pagead/aclk?sa=L&ai=DChcSEwiutIj96v2MAxWYmVAGHTWzF18YABAAGgJkZw&co=1&gclid=Cj0KCQjw8cHABhC-ARIsAJnY12wbz1aWsUtmmWEfX1QXkZL-fho74w3quyJ2LZEiBIMvyYUEt1rEp-gaAoZJEALw_wcB", "descricao": "IntelliJ IDEA é um ambiente de desenvolvimento integrado (IDE) poderoso, criado pela JetBrains, amplamente usado para desenvolvimento em Java, Kotlin e outras linguagens"}}, {"model": "portfolio.tecnologia", "pk": 9, "fields": {"nome": "Django", "logotipo": "logos_tecnologias/transferir_1.png", "link": "https://www.djangoproject.com/", "descricao": "Django é um framework de alto nível para desenvolvimento web em Python que incentiva o desenvolvimento rápido e limpo de aplicações. Ele segue o padrão MTV (Model-Template-View), uma variação do MVC, e fornece uma estrutura robusta que inclui ORM (Object-Relational Mapping), autenticação de utilizadores, painel administrativo automático, sistema de rotas, e ferramentas para segurança, escalabilidade e manutenção"}}, {"model": "portfolio.tecnologia", "pk": 10, "fields": {"nome": "Python", "logotipo": "logos_tecnologias/transferir_2.png", "link": "https://www.python.org/", "descricao": "Python é uma linguagem de programação fácil de aprender e muito usada em várias áreas, como sites, jogos, análise de dados e inteligência artificial"}}, {"model": "portfolio.tecnologia", "pk": 11, "fields": {"nome": "Pythonanywhere", "logotipo": "logos_tecnologias/transferir_3.png", "link": "https://www.pythonanywhere.com/", "descricao": "PythonAnywhere é uma plataforma online que permite programar e executar código Python diretamente no navegador"}}, {"model": "portfolio.tecnologia", "pk": 12, "fields": {"nome": "HTML", "logotipo": "logos_tecnologias/transferir_4.png", "link": "https://www.w3schools.com/html/", "descricao": "HTML (HyperText Markup Language) é a linguagem usada para criar páginas da internet. Com ela, definimos os textos, imagens, links, botões e a estrutura básica de um site, dizendo ao navegador o que deve ser mostrado e como"}}, {"model": "portfolio.tecnologia", "pk": 13, "fields": {"nome": "CSS", "logotipo": "logos_tecnologias/transferir_5.png", "link": "https://www.w3schools.com/css/", "descricao": "CSS (Cascading Style Sheets) é a linguagem usada para definir o visual de uma página web. Com o CSS, podemos mudar cores, tamanhos, fontes, espaçamentos e organizar onde os elementos aparecem, tornando o site mais bonito e agradável"}}, {"model": "portfolio.tecnologia", "pk": 14, "fields": {"nome": "GitHub", "logotipo": "logos_tecnologias/transferir_6.png", "link": "https://github.com/", "descricao": "GitHub é uma plataforma online onde programadores guardam, partilham e colaboram em projetos de código"}}, {"model": "portfolio.tecnologia", "pk": 15, "fields": {"nome": "Selenium", "logotipo": "logos_tecnologias/transferir_7.png", "link": "https://www.selenium.dev/", "descricao": "Selenium é uma ferramenta de automação para testes de aplicações web."}}, {"model": "portfolio.tecnologia", "pk": 16, "fields": {"nome": "MySQL", "logotipo": "logos_tecnologias/ECX-1909_Hero_MySQL_600x4002x-1_0.png", "link": "https://www.mysql.com/", "descricao": "MySQL é um sistema de gestão de bases de dados relacional, usado para armazenar e organizar grandes quantidades de informação."}}, {"model": "portfolio.projeto", "pk": 1, "fields": {"titulo": "Humans VS Zombies", "descricao": "O jogo que desenvolvi para o projeto é um jogo de tabuleiro 2D inspirado no estilo Humans vs Zombies, ambientado num apocalipse zombie. Os jogadores assumem o papel de humanos que, armados até os dentes, tentam se defender e sobreviver contra as hordas de zombies. O tabuleiro oferece um espaço estratégico onde os humanos podem usar suas armas para se proteger, enquanto tentam encontrar maneiras de se manter vivos. O objetivo dos zombies é, claro, dominar os humanos, forçando-os a uma luta constante pela sobrevivência. A mecânica do jogo envolve movimento tático, decisões rápidas e, claro, muita tensão enquanto os humanos tentam evitar ser capturados ou transformados em zombies!", "link_github": "https://github.com/ULHT-LP2-2024-25-students/projeto-lp2-prof-pedro-alves-miguel-r-22306155-rodrigo-n-22302691", "link_demo": null, "conceitos_aplicados": "Herança: O conceito de herança permite criar uma estrutura de classes onde os personagens do jogo compartilham propriedades e comportamentos comuns, mas também podem ter suas características específicas. Por exemplo, criamos uma classe base chamada Creatura, que define propriedades comuns a todos os personagens, movimento e ações. A partir dessa classe base, criamos classes derivadas, como Humano e Zombie, que herdam as propriedades e métodos de Creatura, mas adicionam suas próprias características, como habilidades especiais ou diferentes formas de atacar.\r\n\r\nPolimorfismo: O polimorfismo entra em cena quando queremos que os métodos das classes derivadas tenham comportamentos específicos, mas com a mesma interface. Por exemplo, tanto os humanos quanto os zombies podem ter um método chamado atacar(), mas o comportamento desse método será diferente dependendo do tipo de personagem. No caso dos humanos, o método pode envolver o uso de armas, enquanto nos zombies, pode envolver o ataque físico. Dessa forma, o polimorfismo permite que o jogo trate todos os personagens de forma genérica, mas com comportamentos específicos para cada tipo.", "desafios_interessantes": "Embora a implementação das bases de herança e polimorfismo não tenha sido tão desafiadora, o maior desafio foi criar as várias classes e definir os diferentes tipos de ataques, defesas e movimentos para cada tipo de criatura. Esse processo exigiu mais esforço, pois envolveu a construção de lógicas distintas para cada personagem, tornando o jogo mais dinâmico e complexo.", "disciplina": 1, "tecnologias_utilizadas": [1, 8]}}, {"model": "portfolio.projeto", "pk": 2, "fields": {"titulo": "Website de Produtos", "descricao": "Este projeto é uma aplicação web de e-commerce desenvolvida com Next.js e React, utilizando TypeScript para garantir maior segurança e escalabilidade no desenvolvimento. A aplicação permite que utilizadores explorem uma lista de produtos, visualizem detalhes e adicionem itens ao carrinho de compras de forma dinâmica.", "link_github": "https://github.com/miguelRodr1gues/react-nextjs", "link_demo": null, "conceitos_aplicados": "React\r\nConceito principal: Componentização\r\n➡️ A interface é dividida em componentes reutilizáveis, cada um com sua lógica e aparência.\r\n\r\nJavaScript\r\nConceito principal: Manipulação do DOM e lógica de programação\r\n➡️ Permite interações dinâmicas com a página, como cliques, animações e carregamento de dados.\r\n\r\nTailwind CSS\r\nConceito principal: Estilização com classes utilitárias\r\n➡️ Usa classes diretamente no HTML para aplicar estilos de forma rápida e responsiva.\r\n\r\nTypeScript\r\nConceito principal: Tipagem estática e segurança no código\r\n➡️ Define tipos para variáveis e funções, ajudando a prevenir erros e facilitar a manutenção.", "desafios_interessantes": "Um dos maiores desafios do projeto foi implementar o carrinho de compras. Garantir que os produtos fossem corretamente adicionados, sem duplicações desnecessárias, e que o estado se mantivesse mesmo após atualizar a página, exigiu uma boa estruturação do Context API em conjunto com LocalStorage.\r\n\r\nApesar disso, o restante do projeto — como a navegação entre páginas, renderização dinâmica com Next.js, e a tipagem com TypeScript — foi desenvolvido de forma fluída e sem grandes complicações.", "disciplina": 2, "tecnologias_utilizadas": [2, 3, 4, 5, 6]}}, {"model": "portfolio.projeto", "pk": 3, "fields": {"titulo": "Batalha Naval", "descricao": "Desenvolver uma grelha 2D que simule a arena do jogo, com navios e marcadores de jogadas anteriores.\r\nCriar uma interface de linha de comando para a interação do jogador com o jogo.", "link_github": "https://github.com/Dr1gues/Dr1gues/blob/main/README.md?plain=1", "link_demo": "https://youtu.be/CYT0lOyQrro", "conceitos_aplicados": "Programação em Kotlin: ciclos, funções, arrays, arrays2D, leitura do teclado, escrita no ecrã.", "desafios_interessantes": "Nenhuns", "disciplina": 3, "tecnologias_utilizadas": [7, 8]}}, {"model": "portfolio.projeto", "pk": 4, "fields": {"titulo": "Portfolio", "descricao": "Criação de aplicação Web com um portfolio. Segue o modelo Model-View-Control. Integra modelação e implementação de uma base de dados, desenvolvimento de toda a lógica de negócio, e criação de interfaces Web.\r\nCriação de uma aplicações sobre o curso (com informação das disciplinas e seus conteudos), projetos realizados\r\nCriação de um blog, que permite comentários e ratings\r\nInterligação com APIs", "link_github": null, "link_demo": null, "conceitos_aplicados": "Model-view-control\r\nFramework de desenvolvimento web django, para backend e frontend\r\nModelação de bases de dados\r\nCriação de interfaces Web\r\nDesenvolvimento de APIs, web scraping e automação\r\nUtilização de uma Platform as a Service (PaaS)", "desafios_interessantes": "Nenhuns", "disciplina": 4, "tecnologias_utilizadas": [4, 9, 10, 11, 12, 13, 14, 15, 16]}}, {"model": "portfolio.projeto", "pk": 5, "fields": {"titulo": "Lançamento do Projétil", "descricao": "O programa pede a altura, a velocidade inicial e o ângulo.\r\nTemos o output de um gráfico do trajeto do projétil consoante os inputs inseridos\r\nPodemos repetir o programa o quanto desejarmos.", "link_github": null, "link_demo": "https://youtu.be/1fk8l_IUJxM", "conceitos_aplicados": "Referencial, posição e trajetória.\r\nMovimento no espaço. Projéteis\r\nProgramação em Kotlin: leitura do teclado, escrita no ecrã.", "desafios_interessantes": "Nenhuns", "disciplina": 5, "tecnologias_utilizadas": [7, 8]}}]